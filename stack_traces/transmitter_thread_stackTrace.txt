__gnu_cxx::__ops::_Iter_equals_val<AMQP::Monitor* const>::operator()<__gnu_cxx::__normal_iterator<AMQP::Monitor**, std::vector<AMQP::Monitor*, std::allocator<AMQP::Monitor*> > > >(__gnu_cxx::__ops::_Iter_equals_val<AMQP::Monitor* const> * const this, __gnu_cxx::__normal_iterator<AMQP::Monitor**, std::vector<AMQP::Monitor*, std::allocator<AMQP::Monitor*> > > __it) (/usr/include/c++/9/bits/predefined_ops.h:241)
std::__remove_if<__gnu_cxx::__normal_iterator<AMQP::Monitor**, std::vector<AMQP::Monitor*, std::allocator<AMQP::Monitor*> > >, __gnu_cxx::__ops::_Iter_equals_val<AMQP::Monitor* const> >(__gnu_cxx::__normal_iterator<AMQP::Monitor**, std::vector<AMQP::Monitor*, std::allocator<AMQP::Monitor*> > > __first, __gnu_cxx::__normal_iterator<AMQP::Monitor**, std::vector<AMQP::Monitor*, std::allocator<AMQP::Monitor*> > > __last, __gnu_cxx::__ops::_Iter_equals_val<AMQP::Monitor* const> __pred) (/usr/include/c++/9/bits/stl_algo.h:875)
std::remove<__gnu_cxx::__normal_iterator<AMQP::Monitor**, std::vector<AMQP::Monitor*, std::allocator<AMQP::Monitor*> > >, AMQP::Monitor*>(__gnu_cxx::__normal_iterator<AMQP::Monitor**, std::vector<AMQP::Monitor*, std::allocator<AMQP::Monitor*> > > __first, __gnu_cxx::__normal_iterator<AMQP::Monitor**, std::vector<AMQP::Monitor*, std::allocator<AMQP::Monitor*> > > __last, AMQP::Monitor * const& __value) (/usr/include/c++/9/bits/stl_algo.h:912)
AMQP::Watchable::remove(AMQP::Watchable * const this, AMQP::Monitor * monitor) (/build/external/amqp-cpp/include/amqpcpp/watchable.h:60)
AMQP::Monitor::~Monitor(AMQP::Monitor * const this) (/build/external/amqp-cpp/include/amqpcpp/monitor.h:94)
AMQP::ChannelImpl::reportSuccess<>()(AMQP::ChannelImpl * const this) (/build/external/amqp-cpp/include/amqpcpp/channelimpl.h:677)
AMQP::QueueBindOKFrame::process(AMQP::QueueBindOKFrame * const this, AMQP::ConnectionImpl * connection) (/build/external/amqp-cpp/src/queuebindokframe.h:72)
AMQP::ReceivedFrame::processQueueFrame(AMQP::ReceivedFrame * const this, AMQP::ConnectionImpl * connection) (/build/external/amqp-cpp/src/receivedframe.cpp:275)
AMQP::ReceivedFrame::processMethodFrame(AMQP::ReceivedFrame * const this, AMQP::ConnectionImpl * connection) (/build/external/amqp-cpp/src/receivedframe.cpp:165)
AMQP::ReceivedFrame::process(AMQP::ReceivedFrame * const this, AMQP::ConnectionImpl * connection) (/build/external/amqp-cpp/src/receivedframe.cpp:138)
AMQP::ConnectionImpl::parse(AMQP::ConnectionImpl * const this, const AMQP::Buffer & buffer) (/build/external/amqp-cpp/src/connectionimpl.cpp:135)
AMQP::Connection::parse(AMQP::Connection * const this, const AMQP::Buffer & buffer) (/build/external/amqp-cpp/include/amqpcpp/connection.h:147)
AMQP::TcpConnection::onReceived(AMQP::TcpConnection * const this, AMQP::TcpState * state, const AMQP::Buffer & buffer) (build/external/amqp-cpp/include/amqpcpp/linux_tcp/tcpconnection.h:163)
AMQP::TcpConnected::process(AMQP::TcpConnected * const this, const AMQP::Monitor & monitor, int fd, int flags) (/build/external/amqp-cpp/src/linux_tcp/tcpconnected.h:167)
AMQP::TcpConnection::process(AMQP::TcpConnection * const this, int fd, int flags) (/build/external/amqp-cpp/src/linux_tcp/tcpconnection.cpp:102)
AMQP::LibEventHandler::Watcher::callback(int fd, short what, void * connection_arg) (/build/external/amqp-cpp/include/amqpcpp/libevent.h:67)
libevent-2.1.so.7![Unknown/Just-In-Time compiled code] (Unknown Source:0)
libevent-2.1.so.7!event_base_loop (Unknown Source:0)
ConnHandler::Start(ConnHandler * const this) (test_app.cpp:83)
--------------------------------------------------------
RabbitMQTransmitter::Start(RabbitMQTransmitter * const this) (test_app.cpp:142)
--------------------------------------------------------
std::__invoke_impl<void, void (RabbitMQTransmitter::*)(), RabbitMQTransmitter*>(void (RabbitMQTransmitter::*&&)(RabbitMQTransmitter * const) __f, RabbitMQTransmitter *&& __t) (/usr/include/c++/9/bits/invoke.h:73)
std::__invoke<void (RabbitMQTransmitter::*)(), RabbitMQTransmitter*>(void (RabbitMQTransmitter::*&&)(RabbitMQTransmitter * const) __fn) (/usr/include/c++/9/bits/invoke.h:95)
std::thread::_Invoker<std::tuple<void (RabbitMQTransmitter::*)(), RabbitMQTransmitter*> >::_M_invoke<0ul, 1ul>(std::thread::_Invoker<std::tuple<void (RabbitMQTransmitter::*)(), RabbitMQTransmitter*> > * const this) (/usr/include/c++/9/thread:244)
std::thread::_Invoker<std::tuple<void (RabbitMQTransmitter::*)(), RabbitMQTransmitter*> >::operator()(std::thread::_Invoker<std::tuple<void (RabbitMQTransmitter::*)(), RabbitMQTransmitter*> > * const this) (/usr/include/c++/9/thread:251)
std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (RabbitMQTransmitter::*)(), RabbitMQTransmitter*> > >::_M_run(std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (RabbitMQTransmitter::*)(), RabbitMQTransmitter*> > > * const this) (/usr/include/c++/9/thread:195)
libstdc++.so.6![Unknown/Just-In-Time compiled code] (Unknown Source:0)
libpthread.so.0!start_thread(void * arg) (/build/glibc-SzIz7B/glibc-2.31/nptl/pthread_create.c:477)
libc.so.6!clone() (/build/glibc-SzIz7B/glibc-2.31/sysdeps/unix/sysv/linux/x86_64/clone.S:95)
